#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall -fexceptions
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -std=c++0x -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)libs/libsnowboy-detect.a -lcblas -llapack_atlas -lasound -ljack -lwiringPi
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/rhonda

INC_RELEASE = $(INC) -Ilibs -Ilibs/portaudio
CFLAGS_RELEASE = $(CFLAGS) -O3 -std=c++0x -Wall
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)libs/libsnowboy-detect.a -lcblas libs/portaudio/libportaudio.a -llapack_atlas -lasound -ljack -lpthread -lrt -lm -ldl -lFLAC -lcurl -lwiringPi
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/rhonda

OBJ_DEBUG = $(OBJDIR_DEBUG)/applications.o $(OBJDIR_DEBUG)/audio.o $(OBJDIR_DEBUG)/flac.o $(OBJDIR_DEBUG)/fonction.o $(OBJDIR_DEBUG)/hardware.o $(OBJDIR_DEBUG)/libs/i2cbusses.o $(OBJDIR_DEBUG)/libs/pugixml.o $(OBJDIR_DEBUG)/libs/rs232.o $(OBJDIR_DEBUG)/libs/slre.o $(OBJDIR_DEBUG)/prog.o $(OBJDIR_DEBUG)/traitement.o $(OBJDIR_DEBUG)/translategoogle.o $(OBJDIR_DEBUG)/uart.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/applications.o $(OBJDIR_RELEASE)/audio.o $(OBJDIR_RELEASE)/flac.o $(OBJDIR_RELEASE)/fonction.o $(OBJDIR_RELEASE)/hardware.o $(OBJDIR_RELEASE)/libs/i2cbusses.o $(OBJDIR_RELEASE)/libs/pugixml.o $(OBJDIR_RELEASE)/libs/rs232.o $(OBJDIR_RELEASE)/libs/slre.o $(OBJDIR_RELEASE)/prog.o $(OBJDIR_RELEASE)/traitement.o $(OBJDIR_RELEASE)/translategoogle.o $(OBJDIR_RELEASE)/uart.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)
	test -d $(OBJDIR_DEBUG)/libs || mkdir -p $(OBJDIR_DEBUG)/libs

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/applications.o: applications.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c applications.cpp -o $(OBJDIR_DEBUG)/applications.o

$(OBJDIR_DEBUG)/audio.o: audio.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c audio.cpp -o $(OBJDIR_DEBUG)/audio.o

$(OBJDIR_DEBUG)/flac.o: flac.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c flac.c -o $(OBJDIR_DEBUG)/flac.o

$(OBJDIR_DEBUG)/fonction.o: fonction.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c fonction.cpp -o $(OBJDIR_DEBUG)/fonction.o

$(OBJDIR_DEBUG)/hardware.o: hardware.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c hardware.cpp -o $(OBJDIR_DEBUG)/hardware.o

$(OBJDIR_DEBUG)/libs/i2cbusses.o: libs/i2cbusses.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c libs/i2cbusses.c -o $(OBJDIR_DEBUG)/libs/i2cbusses.o

$(OBJDIR_DEBUG)/libs/pugixml.o: libs/pugixml.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c libs/pugixml.cpp -o $(OBJDIR_DEBUG)/libs/pugixml.o

$(OBJDIR_DEBUG)/libs/rs232.o: libs/rs232.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c libs/rs232.c -o $(OBJDIR_DEBUG)/libs/rs232.o

$(OBJDIR_DEBUG)/libs/slre.o: libs/slre.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c libs/slre.c -o $(OBJDIR_DEBUG)/libs/slre.o

$(OBJDIR_DEBUG)/prog.o: prog.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c prog.cpp -o $(OBJDIR_DEBUG)/prog.o

$(OBJDIR_DEBUG)/traitement.o: traitement.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c traitement.cpp -o $(OBJDIR_DEBUG)/traitement.o

$(OBJDIR_DEBUG)/translategoogle.o: translategoogle.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c translategoogle.cpp -o $(OBJDIR_DEBUG)/translategoogle.o

$(OBJDIR_DEBUG)/uart.o: uart.c
	$(CC) $(CFLAGS_DEBUG) $(INC_DEBUG) -c uart.c -o $(OBJDIR_DEBUG)/uart.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)
	rm -rf $(OBJDIR_DEBUG)/libs

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	test -d $(OBJDIR_RELEASE)/libs || mkdir -p $(OBJDIR_RELEASE)/libs

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/applications.o: applications.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c applications.cpp -o $(OBJDIR_RELEASE)/applications.o

$(OBJDIR_RELEASE)/audio.o: audio.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c audio.cpp -o $(OBJDIR_RELEASE)/audio.o

$(OBJDIR_RELEASE)/flac.o: flac.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c flac.c -o $(OBJDIR_RELEASE)/flac.o

$(OBJDIR_RELEASE)/fonction.o: fonction.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c fonction.cpp -o $(OBJDIR_RELEASE)/fonction.o

$(OBJDIR_RELEASE)/hardware.o: hardware.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c hardware.cpp -o $(OBJDIR_RELEASE)/hardware.o

$(OBJDIR_RELEASE)/libs/i2cbusses.o: libs/i2cbusses.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c libs/i2cbusses.c -o $(OBJDIR_RELEASE)/libs/i2cbusses.o

$(OBJDIR_RELEASE)/libs/pugixml.o: libs/pugixml.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c libs/pugixml.cpp -o $(OBJDIR_RELEASE)/libs/pugixml.o

$(OBJDIR_RELEASE)/libs/rs232.o: libs/rs232.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c libs/rs232.c -o $(OBJDIR_RELEASE)/libs/rs232.o

$(OBJDIR_RELEASE)/libs/slre.o: libs/slre.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c libs/slre.c -o $(OBJDIR_RELEASE)/libs/slre.o

$(OBJDIR_RELEASE)/prog.o: prog.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c prog.cpp -o $(OBJDIR_RELEASE)/prog.o

$(OBJDIR_RELEASE)/traitement.o: traitement.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c traitement.cpp -o $(OBJDIR_RELEASE)/traitement.o

$(OBJDIR_RELEASE)/translategoogle.o: translategoogle.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c translategoogle.cpp -o $(OBJDIR_RELEASE)/translategoogle.o

$(OBJDIR_RELEASE)/uart.o: uart.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c uart.c -o $(OBJDIR_RELEASE)/uart.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)/libs

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

